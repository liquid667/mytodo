input {
 file {
  type => "project-xml"
  path => [ 
   "c:\Development\repos\mytodo\elk\logs\ccc2.log"
  ]
  start_position => "beginning"
  add_field => [ "app", "ccc" ]
  codec => multiline {
   pattern => "^\s*<log "
   negate => true
   what => previous
  }
 }
}
filter {
    xml {
      source => "message"
      xpath => [
        "/log/@level", "level",
        "/log/@time", "time",
        "/log/@timel", "timel",
        "/log/@id", "id",
        "/log/@cat", "cat",
        "/log/@comp", "comp",
        "/log/@host", "hostname",
        "/log/@req", "req",
        "/log/@app", "eventid",
        "/log/@usr", "usr",
        "/log/@vin", "vin",
        "/log/@thread", "thread",
        "/log/@origin", "origin",
        "/log/msg/text()", "msg1",
        "/log/info/text()", "info",
        "/log/excp/text()", "excp"
      ]
      store_xml => false
      add_field => [ "indexer", "indexer0" ]
    }
    grok {
      match => [ "msg", "(?:<!\[CDATA\[%{GREEDYDATA:msg}\]\]>)" ]
      overwrite => [ "msg" ]
    }
    grok {
      match => [ "info", "(?:<!\[CDATA\[%{GREEDYDATA:info}\]\]>)" ]
      overwrite => [ "info" ]
    }
    grok {
      match => [ "excp", "(?:<!\[CDATA\[%{GREEDYDATA:excp}\]\]>)" ]
      overwrite => [ "excp" ]
    }
  date {
    match => [ "timel", "UNIX_MS" ]
    #timezone => "Europe/Berlin"
  }

  if !("_grokparsefailure" in [tags]) and !("_xmlparsefailure" in [tags]) {
    mutate {
      remove_field => [ "@source", "message" ]
    }
  }
}
output {
  elasticsearch {
   host => "127.0.0.1"
   node_name => "neo"
   cluster => "thematrix"
 }
}